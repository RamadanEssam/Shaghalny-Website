@model Jop_Offers_Website.Models.Job

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

<div class="container">
    <div class="row">
        <div class=" col-lg-7 col-md-8 mx-auto myformstyle mt-md-3 px-4 py-2 my-0 mb-md-3">
            @using (Html.BeginForm("Editjob", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <h3 class="mt-2 text-center">تعديل الوظيفه</h3>
                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                <div class="row mx-0 px-0">
                    <div class="form-group col-12">
                        @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col-md">
                            @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control inputborder" } })
                            @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.MinSalary, htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col-md">
                            @Html.EditorFor(model => model.MinSalary, new { htmlAttributes = new { @class = "form-control inputborder" } })
                            @Html.ValidationMessageFor(model => model.MinSalary, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.MaxSalary, htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col-md">
                            @Html.EditorFor(model => model.MaxSalary, new { htmlAttributes = new { @class = "form-control inputborder" } })
                            @Html.ValidationMessageFor(model => model.MaxSalary, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.MinAge, htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col-md">
                            @Html.EditorFor(model => model.MinAge, new { htmlAttributes = new { @class = "form-control inputborder" } })
                            @Html.ValidationMessageFor(model => model.MinAge, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.MaxAge, htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col-md">
                            @Html.EditorFor(model => model.MaxAge, new { htmlAttributes = new { @class = "form-control inputborder" } })
                            @Html.ValidationMessageFor(model => model.MaxAge, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.ExperienceId, "مستوى الخبره المطلوب", htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col-md">
                            @Html.DropDownListFor(model => model.Experience.Id, ViewBag.ExperienceId as SelectList, htmlAttributes: new { @class = "inputborder form-control" })
                            @Html.ValidationMessageFor(model => model.ExperienceId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.QualificationId, "المؤهل الدراسى", htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col-md">
                            @Html.DropDownListFor(model => model.Qualification.Id, ViewBag.QualificationId as SelectList, htmlAttributes: new { @class = "inputborder form-control" })
                            @Html.ValidationMessageFor(model => model.QualificationId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.GenderId, "الجنس المطلوب", htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col-md">
                            @Html.DropDownListFor(model => model.Gender.Id, ViewBag.GenderId as SelectList, htmlAttributes: new { @class = "inputborder form-control" })
                            @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.GovernoratesId, "محافظه ", htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col-md">
                            @Html.DropDownListFor(model => model.Governorates.Id, ViewBag.GovernoratesId as SelectList, htmlAttributes: new { @class = "inputborder form-control" })
                            @Html.ValidationMessageFor(model => model.GovernoratesId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.JobImage, htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col-md">
                            <input type="file" class="form-control inputborder" name="upload" />
                            <span class="text-danger">@ViewBag.imgerr</span>
                            @Html.ValidationMessageFor(model => model.JobImage, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.CategoryId, "نوع الوظيفه", htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col-md">
                            @Html.DropDownListFor(model => model.category.Id, ViewBag.CategoryId as SelectList, htmlAttributes: new { @class = "inputborder form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-12">
                        @Html.LabelFor(model => model.JobContent, htmlAttributes: new { @class = "control-label col-md" })
                        <div class="col-md">
                            @Html.TextAreaFor(model => model.JobContent, new { @class = "inputborder form-control", @rows = "5" })
                            @Html.ValidationMessageFor(model => model.JobContent, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <!---->
                    @*//عشان اعرف الصوره القديمه لو هو مش هيعدل الصوره*@
                    @Html.HiddenFor(model => model.JobImage)

                    <div class="form-group col-12">
                        <div class=" col-md">
                            <input type="submit" value="تعديل" class="btn btn-warning w-100 my-2" />
                        </div>
                    </div>
                    <div class="col-12">
                        @Html.ActionLink("الرجوع الى القائمه", "GetAllPublisherJobs", null, new { @class = "btn btn-outline-warning w-100 mb-2" })
                    </div>
                </div>
                </div>
            }

            
        </div>
    </div>

</div>
       

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
